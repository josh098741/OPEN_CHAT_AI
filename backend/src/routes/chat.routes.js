import express from 'express'
import axios from 'axios'
import dotenv from 'dotenv'

dotenv.config()
const router = express.Router()

const GEMINI_API_KEY = process.env.GEMINI_API_KEY

router.post("/", async (req,res) => {
    try{
        const { message } = req.body
        if(!message){
            return res.status(400).json({ message: "Message is required" })
        }

        const response = await axios.post(
            "https://generativelanguage.googleapis.com/v1/models/gemini-2.5-pro:generateContent?key=" + GEMINI_API_KEY,
            {
                contents: [{
                    parts: [{
                        text: message
                    }]
                }]
            }
        )

        const candidates = response.data?.candidates
        const reply = candidates?.[0]?.content?.parts?.[0]?.text || "No response generated by Gemini."
        res.status(200).json({ reply })
    }catch(error){
        console.error("Gemini API Error:", error.response?.data || error.message)
        res.status(500).json({ error: error.response?.data?.error.message || "Gemini Api request failed" })
    }
})




export default router